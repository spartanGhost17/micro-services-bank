services:
  # databases for local development
  accountsdb:
    image: mysql
    container_name: accountsdb
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: accountsdb
      MYSQL_ROOT_PASSWORD: root

  loansdb:
    image: mysql
    container_name: loansdb
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: loansdb
      MYSQL_ROOT_PASSWORD: root

  cardsdb:
    image: mysql
    container_name: cardsdb
    ports:
      - 3308:3306
    environment:
      MYSQL_DATABASE: cardsdb
      MYSQL_ROOT_PASSWORD: root

  rabbitmq:
    image: rabbitmq:4.0-management-alpine # RabbitMQ with Management UI
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"  # RabbitMQ messaging port
      - "15672:15672"  # RabbitMQ Management UI

  kafka:
    image: docker.io/bitnami/kafka:3.7 # has production ready implementation of KRaft (zookeeper is being replaced soon)
    ports:
      - "9092:9092"
    #volumes:
    #  - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      #- KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@host.docker.internal:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092  # this is the ip where Kafka will advertise itself to the outside world
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

#  kafka_b:
#    image: bitnami/kafka:3.4
#    hostname: kafka_b
#    ports:
#      - "9092:9092"
#      - "9094:9094"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      - KAFKA_ENABLE_KRAFT=yes
#      # - KAFKA_KRAFT_CLUSTER_ID=228f04bc-0895-11ee-be56-0242ac120002
#      - KAFKA_CFG_PROCESS_ROLES=broker,controller
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka_b:9094
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_NODE_ID=1
#      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
#      # - BITNAMI_DEBUG=yes
#      - KAFKA_CFG_NUM_PARTITIONS=2

#  kafka-ui:
#    container_name: kafka-ui
#    image: provectuslabs/kafka-ui:v0.7.0
#    depends_on:
#      - kafka_b
#    ports:
#      - 8086:8080
#    environment:
#      DYNAMIC_CONFIG_ENABLED: 'true'
#      # LOGGING_LEVEL_ROOT: 'DEBUG'
#    volumes:
#      - /c/tools/kafka/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
#
#  rest-proxy:
#    image: confluentinc/cp-kafka-rest:6.0.0
#    depends_on:
#      - kafka_b
#    ports:
#      - 8082:8082
#    hostname: rest-proxy
#    container_name: rest-proxy
#    environment:
#      KAFKA_REST_HOST_NAME: rest-proxy
#      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka_b:9094'
#      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
#
#  schema-registry:
#    image: confluentinc/cp-schema-registry:latest
#    hostname: schema-registry
#    depends_on:
#      - kafka_b
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka_b:9094,PLAINTEXT_INTERNAL://localhost:29092
#      # SCHEMA_REGISTRY_DEBUG: 'true'

  redis:
    image: redis:latest
    container_name: my-redis
    ports:
      - "6379:6379"  # Redis default port

#volumes:
  #kafka_data:
    #driver: local
    #driver_opts:
      #o: bind
      #type: none
      #device: /path/to/local/dir
